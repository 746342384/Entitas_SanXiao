//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Components.ItemIndex gameComponentsItemIndex { get { return (Game.Components.ItemIndex)GetComponent(GameComponentsLookup.GameComponentsItemIndex); } }
    public bool hasGameComponentsItemIndex { get { return HasComponent(GameComponentsLookup.GameComponentsItemIndex); } }

    public void AddGameComponentsItemIndex(CustomVector2 newVector2) {
        var index = GameComponentsLookup.GameComponentsItemIndex;
        var component = (Game.Components.ItemIndex)CreateComponent(index, typeof(Game.Components.ItemIndex));
        component.Vector2 = newVector2;
        AddComponent(index, component);
    }

    public void ReplaceGameComponentsItemIndex(CustomVector2 newVector2) {
        var index = GameComponentsLookup.GameComponentsItemIndex;
        var component = (Game.Components.ItemIndex)CreateComponent(index, typeof(Game.Components.ItemIndex));
        component.Vector2 = newVector2;
        ReplaceComponent(index, component);
    }

    public void RemoveGameComponentsItemIndex() {
        RemoveComponent(GameComponentsLookup.GameComponentsItemIndex);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameComponentsItemIndex;

    public static Entitas.IMatcher<GameEntity> GameComponentsItemIndex {
        get {
            if (_matcherGameComponentsItemIndex == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameComponentsItemIndex);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameComponentsItemIndex = matcher;
            }

            return _matcherGameComponentsItemIndex;
        }
    }
}
