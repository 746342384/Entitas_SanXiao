//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameComponentsAnyScroeListenerComponent gameComponentsAnyScroeListener { get { return (GameComponentsAnyScroeListenerComponent)GetComponent(GameComponentsLookup.GameComponentsAnyScroeListener); } }
    public bool hasGameComponentsAnyScroeListener { get { return HasComponent(GameComponentsLookup.GameComponentsAnyScroeListener); } }

    public void AddGameComponentsAnyScroeListener(System.Collections.Generic.List<IGameComponentsAnyScroeListener> newValue) {
        var index = GameComponentsLookup.GameComponentsAnyScroeListener;
        var component = (GameComponentsAnyScroeListenerComponent)CreateComponent(index, typeof(GameComponentsAnyScroeListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameComponentsAnyScroeListener(System.Collections.Generic.List<IGameComponentsAnyScroeListener> newValue) {
        var index = GameComponentsLookup.GameComponentsAnyScroeListener;
        var component = (GameComponentsAnyScroeListenerComponent)CreateComponent(index, typeof(GameComponentsAnyScroeListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameComponentsAnyScroeListener() {
        RemoveComponent(GameComponentsLookup.GameComponentsAnyScroeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameComponentsAnyScroeListener;

    public static Entitas.IMatcher<GameEntity> GameComponentsAnyScroeListener {
        get {
            if (_matcherGameComponentsAnyScroeListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameComponentsAnyScroeListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameComponentsAnyScroeListener = matcher;
            }

            return _matcherGameComponentsAnyScroeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGameComponentsAnyScroeListener(IGameComponentsAnyScroeListener value) {
        var listeners = hasGameComponentsAnyScroeListener
            ? gameComponentsAnyScroeListener.value
            : new System.Collections.Generic.List<IGameComponentsAnyScroeListener>();
        listeners.Add(value);
        ReplaceGameComponentsAnyScroeListener(listeners);
    }

    public void RemoveGameComponentsAnyScroeListener(IGameComponentsAnyScroeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gameComponentsAnyScroeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGameComponentsAnyScroeListener();
        } else {
            ReplaceGameComponentsAnyScroeListener(listeners);
        }
    }
}
